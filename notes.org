#+TITLE: Quantum Volume
#+AUTHOR: Daniel Moreno Manzano

#+LATEX_HEADER: \usepackage{geometry}
#+LATEX_HEADER: \geometry{left=2.5cm,right=2.5cm,top=2.5cm,bottom=2.5cm}

#+OPTIONS: toc:nil


* Introduction

Given the different hardware implementations and technologies in Quantum Computation (superconducting, ion-trap, spin qubits, ...), it is often difficult to benchmark the usefulness or power of quantum systems. 
A *hardware-independent measure* is required to depict whether a device is able to run a quantum circuit or not.
Here is where the Quantum Volume metric appears on the scene.

The aim of Quantum Volume is to quantify the computational power of quantum devices. 
Consequently we will use it as a metric to measure the runnability of the quantum algorithms and the quantum devices -- /*"can this algorithm be run in a given device?"*/.
While the device is the basis of the Quantum Volume metric, we fix our attention on the circuit.
Our purpose is to assert how the mapping procedure affects the runnability of a given circuit and to study how the Quantum Volume is related to the probability of success.

** Report structure                                               :noexport:

This report outlines the general definition of Quantum Volume and our studies on the quantum algorithm runnability.
The second section gives a brief overview of ...
The third section examines ...

* Quantum Volume definition

In this section, 

** Literature review

Few studies have been published on the Quantum Volume topic cite:Bishop_2017,Moll_2018.
In this section, a brief introduction to the metric is offered, reviewing the important concepts and basis.

*** Hardware parameters

The Quantum Volume metric considers that a quantum computer's performance mainly depends on the next hardware specifications:

- $N$. The number of physical qubits
- Quantum chip topology. The connectivity between qubits
- Maximum number of sequential gates with correctable errors. The number of gates that can be applied before errors or decoherence mask the result
- Gate set. Available hardware gate set
- Maximum number of parallel operations. Number of operations that can be run in parallel

*** Definitions and metrics

In this section we explain some required definitions, infered from cite:Bishop_2017,Moll_2018, to understand Quantum Volume.


- Model algorithm. :: In the literature, Bishop uses the term /model algorithm/ cite:Bishop_2017 to refer to a depth-one circuit, "constructed by random 2-qubit unitary matrix chosen uniformly over SU (4) on a random pairing of the qubits". Or, what is the same, the /model algorithm/ defines any single- or two-qubit gates combination as circuit unit. The mapping requirements of the device and the mapping quality is included as well. In the case that a two-qubit gate force any qubit to be routed, the gate additions will be included in the /model algorithm/.

#+caption: Model algorithm example from cite:Moll_2018. Each step represents a possible combination of gates considered as /model algorithm/. Notice that step 2 requires a mapping process that is shown afterwards.
#+NAME: fig:model_alg
#+ATTR_LATEX: :width 0.7\textwidth
[[file:model_algorithm.png]]


- $\textbf{n}$ :: Number of active qubits in a device of $N$ qubits for a given algorithm.


- Effective error rate $\epsilon_{eff} \approx 1/(d n)$. :: It is the error rate per /model algorithm/, an averaged error over many realizations of depth-one circuits with random combinations of two-qubit gates. $\epsilon_{eff}$ defines how well a device can implement arbitrary pairwise interactions between qubits. As soon as it is the error of the /model algorithm/, it encapsulates errors of both single- and two-qubit gates. And it depends not only on the gate error rates and connectivity, but also on the sophistication of the scheduling algorithm responsible for mapping the model algorithm to the hardware.

- Achievable circuit depth $d(N) \simeq \frac{1}{N \epsilon_{eff}}$ :: Maximum circuit depth for which the results are correctable and useful in some device.

# /Note that the possibility that several consecutive errors could act as the correction of that error is not take into account/.

- Quantum Volume $\tilde{V}_Q = min (N, d(N))^2$ :: quantifies the space-time volume occupied by a model circuit with random two-qubit gates that can be reliably executed on a given device.

    # $$V_Q = \max_{n \le N} \min \left[ n,\frac{1}{n \epsilon_{eff} (n)}\right]^2$$

**** Heuristic routing algorithm parameters                     :noexport:

    - $(u_j, v_j)$ :: qubit pairs that interact

    - $D_0$ :: distance between $u$ and $v$ for a given connectivity graph

    - $\sum_j D(u_j,v_j)$ :: Total distance

    - $\xi_{u,v}$ :: random variable $~N(0,1/n)$
    - $D$ :: Distance Function

    $$D(u,v) = (1+|\xi_{u,v}|) D_0 (u,v)^2$$

    - $r$ :: lowest computed depth

*** Heuristic routing algorithm                                  :noexport:

    Since the algorithm is randomized, we repeat $D(u,v) = (1+|\xi_{u,v}|) D_0 (u,v)^2$ and choose the lowest computed depth, $r$.
    Averaging r over many instances of the model algorithm gives the effective error rate as

    $$\epsilon_{eff} = \epsilon (\bar{r} + 1)$$

    where we assume that all SWAP gates and the needed $SU (4)$ interactions all can be done with constant error $\epsilon$.

    /Note that the algorithm is random/.

*** Insights and Criticism                                       :noexport:

    - Definitions are too vague
    - The error model is quite simplistic
    - They are not considering the different gates times
    - ...

** Insights and new ideas

After understading the concept of Quantum Volume, we derived some insights and we had ideas motivated by the possibilities that the new metric offers. 
We define *runnability* based on the separation of the concepts of /device/ Quantum Volume ($V_Q$) and /algorithm/ Quantum Volume ($V^a_Q$).

*** Quantum Volume of a device

Following cite:Bishop_2017,Moll_2018, we can expand the Quantum Volume general equation ($\tilde{V}_Q$) with the other definitions in the previous section and maximize for the biggest possible $n$. 
Then, the maximum Quantum Volume that a device could run is defined by:

$$V_Q = \max_{n \le N} \min \left[ n,\frac{1}{n \epsilon_{eff} (n)}\right]^2$$

We define this Quantum Volume as the /device/ Quantum Volume. 
In Fig. \ref{fig:deviceQV2} and Fig. \ref{fig:deviceQV1} a graph describing the Quantum Volume as a function of $n$ and $\epsilon_{eff}$ is shown. 

#+BEGIN_EXPORT latex
     %\begin{figure}
     
     %\centering
     \begin{minipage}{.45\textwidth}

     \centering

#+END_EXPORT

 [[file:general_QV2.png]]
 
#+BEGIN_EXPORT latex
     \captionof{figure}{}
     \label{fig:deviceQV2}

     \end{minipage}%
     \hspace{1cm}
     \begin{minipage}{.45\textwidth}

#+END_EXPORT

 [[file:general_QV1.png]]

#+BEGIN_EXPORT latex
     \captionof{figure}{}
     \label{fig:deviceQV1}

     \end{minipage}%
#+END_EXPORT

*** Quantum Volume of an algorithm



$$V_Q^a = \min \left[ n,d \right]^2$$

#+BEGIN_EXPORT latex
     %\begin{figure}
     
     %\centering
     \begin{minipage}{.45\textwidth}

     \centering

#+END_EXPORT

[[file:V_q_analysis2.png]] 

#+BEGIN_EXPORT latex
     \captionof{figure}{}
     \label{fig:algorithmQV2}

     \end{minipage}%
     \hspace{1cm}
     \begin{minipage}{.45\textwidth}

#+END_EXPORT

[[file:V_q_analysis1.png]] 

#+BEGIN_EXPORT latex
     \captionof{figure}{}
     \label{fig:algorithmQV1}

     \end{minipage}%
#+END_EXPORT

**** Problem                                                    :noexport:

It could be the case that one quantum circuit using more qubits than the ones available in a device has lower Quantum Volume than the one in the device. This would mean that theoretically the algorithm could be run in the quantum system, when it actually couldn't.

*** Runnability

# /"Can this device run a given algorithm?"/

Following the $$

We define runnability as 

$$V_Q > V_Q^a$$

One may imagine the process of checking, whether or not, some cube with a given volume -- representing the algorithm -- would fit in a box -- the device --.

*** Depict $\epsilon_{eff}(n)$                                   :noexport:

/How to depict a function of $\epsilon_{eff}$ based on experiments/simulations?/

**** Bounds

With no intelligent compiler/mapping:

$$\epsilon_{eff} > \epsilon$$

**** Averaging $\epsilon_{eff}$

With several random circuits of just 1 cycle, check their fidelity and average. That would be the $\bar{\epsilon}_{eff}$.

**** Finding the real $\epsilon_{eff} (n)$

/Is not this thing kind of the error model?/

*** Near future                                                  :noexport:

+Quantum Volume assumes that a square circuit ($d = \frac{1}{N \epsilon_{eff}} = N$) is the maximum a quantum device could get in term of errors.+
/Maybe is not that but the initial maximum depth calculation formula that leads you to this result/
Following that reasoning, with current devices of $\epsilon_{eff} > 10^{-3}$, the maximum $N$ will be

$$N = \sqrt{\frac{1}{\epsilon_{eff}}} = 31.623$$

* Methodology

# # Intro of how we want to work with Quantum Volume.
# First we will calculate the Quantum Volume of a circuit (before and after mapping. We will be able to see differences because out metric is not following the Quantum Volume $min$ convention)
# +Then, without calculating any effective error rate, we will consider that the Quantum Volume of the device should be smaller than the Quantum Volume of the device.+
# +Knowing that minimum Quantum Volume for the device we can depict the minimum number of qubits or effective error rate required to run a certain algorithm.+

* Thoughts                                                         :noexport:

** Runnability

/"Can this device run a given algorithm?"/

$$V_Q > V_Q^a$$

It can be understood as if a cube fits in another cube.

*** Quantum Volume of a device

Maximum Quantum Volume that a device could run

$$V_Q = \max_{n \le N} \min \left[ n,\frac{1}{n \epsilon_{eff} (n)}\right]^2$$

*** Quantum Volume of an algorithm

$$V_Q^a = \min \left[ n,d \right]^2$$

*** Problem

It could be the case that one quantum circuit using more qubits than the ones available in a device has lower Quantum Volume than the one in the device. This would mean that theoretically the algorithm could be run in the quantum system, when it actually couldn't.

** Depict $\epsilon_{eff}(n)$

/How to depict a function of $\epsilon_{eff}$ based on experiments/simulations?/

*** Bounds

With no intelligent compiler/mapping:

$$\epsilon_{eff} > \epsilon$$

*** Averaging $\epsilon_{eff}$

With several random circuits of just 1 cycle, check their fidelity and average. That would be the $\bar{\epsilon}_{eff}$.

*** Finding the real $\epsilon_{eff} (n)$

/Is not this thing kind of the error model?/

** Near future

+Quantum Volume assumes that a square circuit ($d = \frac{1}{N \epsilon_{eff}} = N$) is the maximum a quantum device could get in term of errors.+
/Maybe is not that but the initial maximum depth calculation formula that leads you to this result/
Following that reasoning, with current devices of $\epsilon_{eff} > 10^{-3}$, the maximum $N$ will be

$$N = \sqrt{\frac{1}{\epsilon_{eff}}} = 31.623$$



* TODO Probability of success relation with Quantum Volume

/How Quantum Volume is related with Probability of success?/

/How to calculate $\epsilon_{eff}$ with the methods of Probability of success?/



* BIB [delete this HEADER]

bibliography:../thesis_plan.bib
bibliographystyle:plain
